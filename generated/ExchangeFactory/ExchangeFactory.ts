// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewExchange extends ethereum.Event {
  get params(): NewExchange__Params {
    return new NewExchange__Params(this);
  }
}

export class NewExchange__Params {
  _event: NewExchange;

  constructor(event: NewExchange) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get exchangeAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SetFeeAddress extends ethereum.Event {
  get params(): SetFeeAddress__Params {
    return new SetFeeAddress__Params(this);
  }
}

export class SetFeeAddress__Params {
  _event: SetFeeAddress;

  constructor(event: SetFeeAddress) {
    this._event = event;
  }

  get feeAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ExchangeFactory extends ethereum.SmartContract {
  static bind(address: Address): ExchangeFactory {
    return new ExchangeFactory("ExchangeFactory", address);
  }

  exchangeAddressByTokenAddress(param0: Address, param1: Address): Address {
    let result = super.call(
      "exchangeAddressByTokenAddress",
      "exchangeAddressByTokenAddress(address,address):(address)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toAddress();
  }

  try_exchangeAddressByTokenAddress(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "exchangeAddressByTokenAddress",
      "exchangeAddressByTokenAddress(address,address):(address)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeAddress(): Address {
    let result = super.call("feeAddress", "feeAddress():(address)", []);

    return result[0].toAddress();
  }

  try_feeAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeAddress", "feeAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isValidExchangeAddress(param0: Address): boolean {
    let result = super.call(
      "isValidExchangeAddress",
      "isValidExchangeAddress(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_isValidExchangeAddress(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidExchangeAddress",
      "isValidExchangeAddress(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _feeAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateNewExchangeCall extends ethereum.Call {
  get inputs(): CreateNewExchangeCall__Inputs {
    return new CreateNewExchangeCall__Inputs(this);
  }

  get outputs(): CreateNewExchangeCall__Outputs {
    return new CreateNewExchangeCall__Outputs(this);
  }
}

export class CreateNewExchangeCall__Inputs {
  _call: CreateNewExchangeCall;

  constructor(call: CreateNewExchangeCall) {
    this._call = call;
  }

  get _baseToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _quoteToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CreateNewExchangeCall__Outputs {
  _call: CreateNewExchangeCall;

  constructor(call: CreateNewExchangeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetFeeAddressCall extends ethereum.Call {
  get inputs(): SetFeeAddressCall__Inputs {
    return new SetFeeAddressCall__Inputs(this);
  }

  get outputs(): SetFeeAddressCall__Outputs {
    return new SetFeeAddressCall__Outputs(this);
  }
}

export class SetFeeAddressCall__Inputs {
  _call: SetFeeAddressCall;

  constructor(call: SetFeeAddressCall) {
    this._call = call;
  }

  get _feeAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeAddressCall__Outputs {
  _call: SetFeeAddressCall;

  constructor(call: SetFeeAddressCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
